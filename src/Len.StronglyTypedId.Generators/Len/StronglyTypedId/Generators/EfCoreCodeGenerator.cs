using System.Text;

namespace Len.StronglyTypedId.Generators
{
    internal class EfCoreCodeGenerator : ICodeGenerator
    {
        internal static readonly ICodeGenerator Instance = new EfCoreCodeGenerator();

        public string Name { get; } = nameof(EfCoreCodeGenerator);

        public int Order { get; } = 3;

        public void Excute(ImmutableArray<StronglyTypedIdTypeInfo> stronglyTypedIdInfos, ImmutableArray<ModuleInfo> modules, SourceProductionContext context, string version)
        {
            var sb = new StringBuilder();
            foreach (var item in modules.SelectMany(s => s.GetTypes())
                .Where(w => w.Interfaces.Any(w => w.Name == "IStronglyTypedId"))
                .Select(s => new StronglyTypedIdTypeInfo(s))
                .Union(stronglyTypedIdInfos)
                .Distinct())
            {
                var code = $$"""
                    // <auto-generated />

                    namespace Len.StronglyTypedId;

                    #nullable enable

                    internal static partial class StronglyTypedIds
                    {
                        /// <inheritdoc/>
                        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("{{nameof(EfCoreCodeGenerator)}}", "{{version}}")]
                        class {{item.Name}}Converter : global::Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter<{{item.FullyQualifiedName}}, {{item.PrimitiveIdTypeName}}>
                        {
                            /// <summary>
                            /// Default constructor.
                            /// </summary>
                            [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute]
                            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("{{nameof(EfCoreCodeGenerator)}}", "{{version}}")]
                            public {{item.Name}}Converter() : base(v => v.Value, val => new {{item.FullyQualifiedName}}(val))
                            {
                            }

                            /// <summary>
                            /// Apply the {{item.Name}} converter to the EntityFramework Core.
                            /// </summary>
                            /// <param name="configurationBuilder"><see cref="global::Microsoft.EntityFrameworkCore.ModelConfigurationBuilder"/></param>
                            [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute]
                            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("{{nameof(EfCoreCodeGenerator)}}", "{{version}}")]
                            public static void ApplyTo(global::Microsoft.EntityFrameworkCore.ModelConfigurationBuilder configurationBuilder) =>
                                configurationBuilder.Properties<{{item.FullyQualifiedName}}>().HaveConversion(typeof({{item.Name}}Converter));
                        }
                    }
                    """;

                context.AddSource($"{item.FullName}.EntityFrameworkCore.g.cs", code);

                sb.Append($"\r\n\t\t{item.Name}Converter.ApplyTo(configurationBuilder);");
            }

            var mainCode = $$"""
                // <auto-generated />

                namespace Len.StronglyTypedId;

                #nullable enable

                internal static partial class StronglyTypedIds
                {
                    /// <summary>
                    /// Employ strongly typed IDs in Entity Framework Core.
                    /// </summary>
                    /// <param name="configurationBuilder"><see cref="global::Microsoft.EntityFrameworkCore.ModelConfigurationBuilder"/></param>
                    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("{{nameof(EfCoreCodeGenerator)}}", "{{version}}")]
                    public static void ApplyTo(global::Microsoft.EntityFrameworkCore.ModelConfigurationBuilder configurationBuilder)
                    {{{sb}}
                    }
                }
                """;

            context.AddSource("StronglyTypedIds.EntityFrameworkCore.g.cs", mainCode);
        }
    }
}