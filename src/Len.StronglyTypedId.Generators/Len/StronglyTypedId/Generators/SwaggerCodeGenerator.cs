namespace Len.StronglyTypedId.Generators
{
    internal class SwaggerCodeGenerator : ICodeGenerator
    {
        internal static readonly ICodeGenerator Instance = new SwaggerCodeGenerator();

        public string Name { get; } = nameof(SwaggerCodeGenerator);

        public int Order { get; } = 4;

        public void Excute(ImmutableArray<StronglyTypedIdTypeInfo> stronglyTypedIdInfos, ImmutableArray<ModuleInfo> modules, SourceProductionContext context, string version)
        {
            var codes = modules.SelectMany(s => s.GetTypes())
                 .Where(w => w.Interfaces.Any(w => w.Name == "IStronglyTypedId"))
                 .Select(s => new StronglyTypedIdTypeInfo(s))
                 .Union(stronglyTypedIdInfos)
                 .Distinct()
                 .Select(s => $"options.MapType<{s.FullyQualifiedName}>(() => {GetOpenApiSchema(s.PrimitiveIdTypeName)});");

            var mainCode = $$"""
                // <auto-generated />

                namespace Len.StronglyTypedId;

                #nullable enable

                internal static partial class StronglyTypedIds
                {
                    /// <summary>
                    /// Employ strongly typed IDs in Swagger.
                    /// </summary>
                    /// <param name="options"><see cref="global::Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions"/></param>
                    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("{{nameof(SwaggerCodeGenerator)}}", "{{version}}")]
                    public static void ApplyTo(global::Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions options)
                    { {{$"\r\n\t\t{string.Join("\r\n\t\t", codes)}"}}
                    }
                }
                """;

            context.AddSource("StronglyTypedIds.Swagger.g.cs", mainCode);
        }

        private static string GetOpenApiSchema(string primitiveIdTypeName) => primitiveIdTypeName switch
        {
            "global::System.Guid" => "new global::Microsoft.OpenApi.Models.OpenApiSchema { Type = \"string\", Format = \"uuid\" }",
            "int" => "new global::Microsoft.OpenApi.Models.OpenApiSchema { Type = \"integer\", Format = \"int32\" }",
            "long" => "new global::Microsoft.OpenApi.Models.OpenApiSchema { Type = \"integer\", Format = \"int64\" }",
            "uint" => "new global::Microsoft.OpenApi.Models.OpenApiSchema { Type = \"integer\", Format = \"uint32\" }",
            "ulong" => "new global::Microsoft.OpenApi.Models.OpenApiSchema { Type = \"integer\", Format = \"uint64\" }",
            "byte" => "new global::Microsoft.OpenApi.Models.OpenApiSchema { Type = \"integer\", Format = \"byte\" }",
            "sbyte" => "new global::Microsoft.OpenApi.Models.OpenApiSchema { Type = \"integer\", Format = \"sbyte\" }",
            "short" => "new global::Microsoft.OpenApi.Models.OpenApiSchema { Type = \"integer\", Format = \"int16\" }",
            "ushort" => "new global::Microsoft.OpenApi.Models.OpenApiSchema { Type = \"integer\", Format = \"uint16\" }",
            _ => "new global::Microsoft.OpenApi.Models.OpenApiSchema { Type = \"string\" }",
        };
    }
}